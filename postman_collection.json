{
	"info": {
		"_postman_id": "notes-app-collection",
		"name": "Notes App API",
		"description": "Complete API collection for Notes App with JWT authentication, notes management, and labels",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000/api",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "resetToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "noteId",
			"value": "",
			"type": "string"
		},
		{
			"key": "labelId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('authToken', response.token);",
									"    pm.environment.set('userId', response.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('authToken', response.token);",
									"    pm.environment.set('userId', response.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Get currently logged in user details"
					},
					"response": []
				},
				{
					"name": "Update User Details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Updated\",\n    \"email\": \"john.updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/updatedetails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"updatedetails"
							]
						},
						"description": "Update user name and email"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"123456\",\n    \"newPassword\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/updatepassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"updatepassword"
							]
						},
						"description": "Change user password"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    // In production, this token would be sent via email",
									"    if (response.resetToken) {",
									"        pm.collectionVariables.set('resetToken', response.resetToken);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/forgotpassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"forgotpassword"
							]
						},
						"description": "Request password reset token"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/resetpassword/{{resetToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"resetpassword",
								"{{resetToken}}"
							]
						},
						"description": "Reset password using token"
					},
					"response": []
				}
			]
		},
		{
			"name": "Labels",
			"item": [
				{
					"name": "Get All Labels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels"
							]
						},
						"description": "Get all labels for the current user with note count"
					},
					"response": []
				},
				{
					"name": "Create Label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('labelId', response.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Work\",\n    \"color\": \"#2196f3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels"
							]
						},
						"description": "Create a new label"
					},
					"response": []
				},
				{
					"name": "Get Single Label",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/labels/{{labelId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels",
								"{{labelId}}"
							]
						},
						"description": "Get label details with associated notes"
					},
					"response": []
				},
				{
					"name": "Update Label",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Work Updated\",\n    \"color\": \"#ff9800\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/labels/{{labelId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels",
								"{{labelId}}"
							]
						},
						"description": "Update label name or color"
					},
					"response": []
				},
				{
					"name": "Add Label to Notes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"noteIds\": [\"{{noteId}}\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/labels/{{labelId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels",
								"{{labelId}}",
								"notes"
							]
						},
						"description": "Add label to multiple notes"
					},
					"response": []
				},
				{
					"name": "Remove Label from Notes",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"noteIds\": [\"{{noteId}}\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/labels/{{labelId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels",
								"{{labelId}}",
								"notes"
							]
						},
						"description": "Remove label from multiple notes"
					},
					"response": []
				},
				{
					"name": "Delete Label",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/labels/{{labelId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"labels",
								"{{labelId}}"
							]
						},
						"description": "Delete a label (removes from all notes)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "Get All Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes"
							],
							"query": [
								{
									"key": "search",
									"value": "important",
									"disabled": true
								},
								{
									"key": "isPinned",
									"value": "true",
									"disabled": true
								},
								{
									"key": "isArchived",
									"value": "false",
									"disabled": true
								},
								{
									"key": "labels",
									"value": "{{labelId}}",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "-createdAt",
									"disabled": true
								}
							]
						},
						"description": "Get all notes with optional filters"
					},
					"response": []
				},
				{
					"name": "Create Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('noteId', response.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My First Note\",\n    \"description\": \"This is the content of my first note. It contains important information.\",\n    \"color\": \"#ffeb3b\",\n    \"labels\": [],\n    \"isPinned\": false,\n    \"isArchived\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes"
							]
						},
						"description": "Create a new note"
					},
					"response": []
				},
				{
					"name": "Get Single Note",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Get a specific note by ID"
					},
					"response": []
				},
				{
					"name": "Update Note",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Note Title\",\n    \"description\": \"This is the updated content of the note.\",\n    \"color\": \"#4caf50\",\n    \"labels\": [\"{{labelId}}\"],\n    \"isPinned\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Update note details"
					},
					"response": []
				},
				{
					"name": "Toggle Pin",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notes/{{noteId}}/pin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								"{{noteId}}",
								"pin"
							]
						},
						"description": "Toggle note pin status"
					},
					"response": []
				},
				{
					"name": "Toggle Archive",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notes/{{noteId}}/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								"{{noteId}}",
								"archive"
							]
						},
						"description": "Toggle note archive status"
					},
					"response": []
				},
				{
					"name": "Reorder Notes",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"noteId\": \"{{noteId}}\",\n    \"newOrder\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notes/reorder",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								"reorder"
							]
						},
						"description": "Change note order for drag and drop"
					},
					"response": []
				},
				{
					"name": "Delete Note",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Delete a note"
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if server is running"
			},
			"response": []
		}
	]
}